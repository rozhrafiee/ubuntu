import pickle
import re
import copy

class File:

    def __init__(self ,address) -> None:
        self.__name = address[-1]
        self.__address = address
        self.__content = ""

    
    def set_address(self ,address):
        self.__address = address

    def get_name(self):
        return self.__name

    def get_address(self):
        return self.__address
class Folder:
    
    def __init__(self ,address) -> None:
        self.__name = address[-1]
        self.__address = address
        self.__folder = []


    def search(self ,name):
        for file in self.__folder:
            if file.get_name() == name:
                return file
        return False

    def add(self ,file:File):
        self.__folder.append(file)
        file.set_address(self.get_address() + f"/{file.get_name()}")  

    def show(self):
        for indx , val in enumerate(self.__folder):
            print(f"{indx+1}) {val.get_name()} : {type(val)}")
        
    def remove(self ,name):
        for inx , val in  enumerate(self.__folder):
            if val.get_name() == name:
                self.__folder.pop(inx)

    def set_address(self ,address):
        self.__address = address

    def get_name(self):
        return self.__name

    def get_address(self):
        return self.__address


    def show(self):
        print(self.__content)

    def write(self ,text):
        self.__content += text
class Windows:

    current_address = ["root"]


    def regex(self ,address):
        if re.search("^(/[^/ ]*)+/?$" ,address) != None:
            self.path_type = "abs"
        if re.search("^(?!-)[a-z0-9-]+(?<!-)(/(?!-)[a-z0-9-]+(?<!-))*(/(?!-\.)[a-z0-9-\.]+(?<!-\.))?$" ,address) != None:
            self.path_type = "rel"
        return False
    

    def save(self):
        with open('win_data.pkl', 'wb') as otp:
            pickle.dump(self.root , otp)


    def load(self):
        try:
            with open('win_data.pkl', 'rb') as inp:
                data = pickle.load(inp)
            self.root = data
        except:
            self.root = Folder("/root")



